<EditForm Model="@colorForm" OnValidSubmit="@submitColor">

  <DataAnnotationsValidator />
  <ValidationSummary />

  <label>
    Name:
    <InputText @bind-Value="@colorForm.Name" />
    <ValidationMessage For="@(()=> colorForm.Name)" />
  </label>
  <label>
    Hex Code:
    <InputText @bind-Value="@colorForm.HexCode" />
    <ValidationMessage For="@(()=> colorForm.HexCode)" />
  </label>
  <button>@ButtonText</button>
</EditForm>

@code {

  [Parameter]
  public string ButtonText { get; set; } = "Submit Color";

  [Parameter]
  public EventCallback<NewColor> OnSubmitColor { get; set; }


  private ColorFormModel colorForm = new();


  private async Task submitColor()
  {
    var newColor = new NewColor()
      {
        Name = colorForm.Name,
        HexCode = colorForm.HexCode,
      };

    await OnSubmitColor.InvokeAsync(newColor);
    colorForm = new();
  }

  class ColorFormModel
  {
    [Required]
    public string Name { get; set; }
    [Required]
    [HexString]
    public string HexCode { get; set; }
  }

}
